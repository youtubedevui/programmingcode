WEBVTT

00:02.380 --> 00:06.430
Now we had our first little Ionic Angular application,

00:06.430 --> 00:12.370
nothing too fancy in there but I hope you saw how we will generally work with Ionic, that we in the end

00:12.370 --> 00:18.160
have a setup where I will explain in more detail how things are working together there, where we can

00:18.160 --> 00:22.420
use these Ionic web components to build nice user interfaces.

00:22.420 --> 00:29.860
Now Ionic hasn't always been about web components though. Historically with Ionic 1, Ionic 1 was all

00:29.860 --> 00:35.840
about creating mobile apps with Angular 1 and Ionic 1 was released in 2013.

00:35.860 --> 00:41.710
In the end what Ionic 1 did was it didn't create web components, that was possible back then, you couldn't

00:41.710 --> 00:48.550
create your own HTML elements, browsers didn't support that but it used Angular 1 directives, custom

00:48.550 --> 00:55.840
directives to essentially also give you custom components but custom Angular components in the end which

00:55.840 --> 00:58.540
run only inside of Angular apps.

00:58.930 --> 01:07.150
Now Ionic 2 continued this in 2016 by giving you the same for Angular 2 which was a brand new version of

01:07.180 --> 01:12.970
Angular which is totally different to Angular 1, the two have basically nothing in common indeed. So

01:12.970 --> 01:20.020
Ionic 2 gave you again Angular components, not web components, Angular components and again therefore,

01:20.170 --> 01:24.940
you could only use Ionic 2 in Angular 2 applications.

01:25.120 --> 01:30.910
Now there also was an Ionic 3 which basically added some new features, enhanced Ionic a little bit

01:31.090 --> 01:38.230
but it was still focused on Angular, at that time Angular 4 was out but still Angular 4 despite the

01:38.230 --> 01:45.130
name as you should know is just the same as Angular 2 in its core, as is Angular 7, 8 and so on, all these

01:45.130 --> 01:47.030
new versions are simply named like this,

01:47.030 --> 01:49.380
they're all based on Angular 2.

01:49.510 --> 01:55.900
So we still could only build Angular Ionic apps there and the Ionic team decided that this would not

01:55.900 --> 02:02.600
be optimal for the future because not all people are using Angular. You of course probably are,

02:02.710 --> 02:08.080
otherwise you would not be taking this course but you could be using React or you could be using Vue

02:08.080 --> 02:13.390
or no framework at all and maybe you want to use some Ionic components, maybe not even all of them but

02:13.390 --> 02:18.820
some of them or you do want to use all of them because you do want to build a native mobile app with

02:18.820 --> 02:27.910
Ionic, well then you were limited to Angular, with Ionic 4, you aren't anymore. Ionic 4 and

02:28.000 --> 02:34.930
all the future versions of Ionic are based on web components and this is a browser specification that

02:34.930 --> 02:41.020
allows you to add your own HTML elements that run totally independent from any web framework you

02:41.020 --> 02:42.100
might be using.

02:42.170 --> 02:47.050
So you're independent from Angular and so on because in the end, all you need here is Javascript,

02:47.050 --> 02:52.870
these web components use Javascript under the hood and every browser supports Javascript and therefore

02:53.140 --> 02:58.780
web components and Ionic 4 can be used with any framework, any web framework or no framework at

02:58.780 --> 03:01.900
all if you want to and that is pretty cool.

03:02.080 --> 03:07.530
Now also a word on the future of Ionic, in the past we had Ionic 2 and 3 and 1,

03:07.630 --> 03:14.160
now we have Ionic 4 and we'll get a new version every six months but just as with Angular 5, 6, 7, 8 and

03:14.170 --> 03:14.880
so on,

03:14.980 --> 03:17.310
these new versions don't change everything,

03:17.350 --> 03:22.410
there are small incremental enhancements where the majority will stay the same,

03:22.450 --> 03:28.840
your knowledge you need will stay the same, only some enhancements are made, minor features are introduced

03:29.080 --> 03:33.300
and all these changes will happen in a backward compatible way

03:33.310 --> 03:36.820
so that you have loads of time of updating your app if needed

03:36.940 --> 03:41.980
and often, you don't even need to update anything. So this is not like oh god, I got to learn something

03:41.980 --> 03:43.060
new in six months,

03:43.060 --> 03:50.980
you don't. This is the Ionic history and a brief look into its future and that is why Ionic 4 and

03:51.100 --> 03:57.760
future versions of that is and will be the best versions of Ionic we've ever had because we got so much

03:57.760 --> 03:59.530
flexibility with these versions.
